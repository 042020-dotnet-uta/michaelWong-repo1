@using WebStoreApp.Web.Models
@model LocationViewModel

@{
    ViewData["Title"] = Model.LocationModel.LocationName;
}

<h1>@Html.DisplayFor(model => model.LocationModel.LocationName)<a asp-action="Index" asp-controller="Locations" class="btn btn-default">Back to Locations</a></h1>

@if (ViewData["Role"] as string == "Admin") {

    @await Html.PartialAsync("_CreateModal", Model.ProductModel)
    @await Html.PartialAsync("_EditModal", new ProductModel { LocationId = Model.LocationModel.LocationId })
    @await Html.PartialAsync("_DeleteModal", new ProductModel { LocationId = Model.LocationModel.LocationId })
    <div class="btn-group mb-3">
        <button type="button" id="btnCreate" class="btn btn-primary" data-toggle="modal" data-target="#createModal">Create New Product</button>
        <a asp-action="Orders" asp-controller="Location" asp-route-id="@Model.LocationModel.LocationId" class="btn btn-primary">View Order History</a>
    </div>
}
@if (ViewData["total"] as string != null) {
    <h4>Orders have been placed, total: $@(ViewData["total"])</h4>
}
@await Html.PartialAsync("_ProductsTable", new ProductsViewModel { LocationId = Model.LocationModel.LocationId, ProductsModel = Model.ProductsModel })
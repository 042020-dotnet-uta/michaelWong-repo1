# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
  - stage: 'Build'
    jobs:
    - job: 'BuildJob'
      steps:
        - task: 'UseDotNet@2'
          inputs:
            version: '3.1.x'
            packageType: runtime
        - task: 'DotNetCoreCLI@2'
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: 'project1\WebStoreApp\WebStoreApp.Web\WebStoreApp.Web.csproj'
            arguments: '--configuration $(buildConfiguration)'
    - job: 'TestJob'
      dependsOn: 'BuildJob'
      steps:
        - task: 'DotNetCoreCLI@2'
          inputs:
            command: 'test'
            projects: 'project1\WebStoreApp\WebStoreApp.Testing\WebStoreApp.Testing.csproj'
    - job: 'PublishJob'
      dependsOn: 'TestJob'
      steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: True
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True
        - task: PublishBuildArtifacts@1
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
            artifactName: 'myWebsiteName'
  - stage: 'Deploy'
    dependsOn: 'Build'
    jobs:
    - job: 'DeployJob'
      steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Azure subscription 1(f0f77c70-bece-4456-ad00-b1eeb211e3bd)'
            appType: 'webApp'
            WebAppName: 'MWRevature'
            packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'